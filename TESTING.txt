Hi, i am running a flask application.
I need that you please modify a javascript and python script with some
specific requirements.
I have a database connection from my python file, and works perfect, but
i need to use it for a different case. 
Please take as reference the following script for you to see how 
i am currently interacting with my db. 
javascript form recolection:
var data1 = document.getElementById("name").value;
var data2 = document.getElementById("email").value;
var data3 = document.getElementById("message").value;
$.ajax({
    type: "POST",
    url: "/db",
    data: {data1: data1, data2: data2, data3: data3},
    success: function(data) {
        // Haz algo aqu√≠ con los datos recibidos
    }
});
flask route:
name = request.form['data1']
email = request.form['data2']
message = request.form['data3']
query = 'INSERT INTO users (uname,uemail,umessage) VALUES (%s,%s,%s)'
params = (name,email,message)
results = execute_query(get_connection(),query,params)

Now based on the connection logic please go step by step and modify both scripts taking into
consideration the following requirements:
The table setup is:
CREATE TABLE IF NOT EXISTS users (
    id INT AUTO_INCREMENT PRIMARY KEY,
    folio INT,
    client VARCHAR(255),
    d DATE,
    flet boolean,
    isr boolean,
    p1prod VARCHAR(255),
    p1mad VARCHAR(255),
    p1med VARCHAR(255),
    p1u VARCHAR(255),
    p1c VARCHAR(255),
    p1t VARCHAR(255),
    p2prod VARCHAR(255),
    p2mad VARCHAR(255),
    p2med VARCHAR(255),
    p2u VARCHAR(255),
    p2c VARCHAR(255),
    p2t VARCHAR(255),
    p3prod VARCHAR(255),
    p3mad VARCHAR(255),
    p3med VARCHAR(255),
    p3u VARCHAR(255),
    p3c VARCHAR(255),
    p3t VARCHAR(255),
    p4prod VARCHAR(255),
    p4mad VARCHAR(255),
    p4med VARCHAR(255),
    p4u VARCHAR(255),
    p4c VARCHAR(255),
    p4t VARCHAR(255),
    p5prod VARCHAR(255),
    p5mad VARCHAR(255),
    p5med VARCHAR(255),
    p5u VARCHAR(255),
    p5c VARCHAR(255),
    p5t VARCHAR(255),
    p6prod VARCHAR(255),
    p6mad VARCHAR(255),
    p6med VARCHAR(255),
    p6u VARCHAR(255),
    p6c VARCHAR(255),
    p6t VARCHAR(255),    
    unotas TEXT,
);

With my html template, the database fields can be assigned as below, following
a 'html id : database field' logic i will specify what type of element belongs
to each html id;
folio : #folio <div>,
client : #client <input type='text'>,
d : #date <input type='date'>,
flet : #flete <input type='checkbox'>,
isr : #isr <input type='checkbox'>,
p1prod : #p1shell <select>,
p1mad : #w1shell <select>,
p1med : #d1shell <select>,
p1u : #u1shell <input type='number'>,
p1c : #q1shell <input type='number'>,
p1t : #t1shell <input type='number'>,
p2prod : #p2shell <select>,
p2mad : #w2shell <select>,
p2med : #d2shell <select>,
p2u : #u2shell <input type='number'>,
p2c : #q2shell <input type='number'>,
p2t : #t2shell <input type='number'>,
p3prod : #p3shell <select>,
p3mad : #w3shell <select>,
p3med : #d3shell <select>,
p3u : #u3shell <input type='number'>,
p3c : #q3shell <input type='number'>,
p3t : #t3shell <input type='number'>,
p4prod : #p4shell <select>,
p4mad : #w4shell <select>,
p4med : #d4shell <select>,
p4u : #u4shell <input type='number'>,
p4c : #q4shell <input type='number'>,
p4t : #t4shell <input type='number'>,
p5prod : #p5shell <select>,
p5mad : #w5shell <select>,
p5med : #d5shell <select>,
p5u : #u5shell <input type='number'>,
p5c : #q5shell <input type='number'>,
p5t : #t5shell <input type='number'>,
p6prod : #p6shell <select>,
p6mad : #w6shell <select>,
p6med : #d6shell <select>,
p6u : #u6shell <input type='number'>,
p6c : #q6shell <input type='number'>,
p6t : #t6shell <input type='number'>,
unotas : #unotas <textarea>

I require to extract the value as you consider needed from each 
html element and use them to insert a new register into my database. 

var folio = document.getElementById("folio").innerText;
var client = document.getElementById("client").value;
var d = document.getElementById("date").value;
var flet = document.getElementById("flete").checked;
var isr = document.getElementById("isr").checked;
var p1prod = document.getElementById("p1shell").value;
var p1mad = document.getElementById("w1shell").value;
var p1med = document.getElementById("d1shell").value;
var p1u = document.getElementById("u1shell").value;
var p1c = document.getElementById("q1shell").value;
var p1t = document.getElementById("t1shell").value;
var p2prod = document.getElementById("p2shell").value;
var p2mad = document.getElementById("w2shell").value;
var p2med = document.getElementById("d2shell").value;
var p2u = document.getElementById("u2shell").value;
var p2c = document.getElementById("q2shell").value;
var p2t = document.getElementById("t2shell").value;
var p3prod = document.getElementById("p3shell").value;
var p3mad = document.getElementById("w3shell").value;
var p3med = document.getElementById("d3shell").value;
var p3u = document.getElementById("u3shell").value;
var p3c = document.getElementById("q3shell").value;
var p3t = document.getElementById("t3shell").value;
var p4prod = document.getElementById("p4shell").value;
var p4mad = document.getElementById("w4shell").value;
var p4med = document.getElementById("d4shell").value;
var p4u = document.getElementById("u4shell").value;
var p4c = document.getElementById("q4shell").value;
var p4t = document.getElementById("t4shell").value;
var p5prod = document.getElementById("p5shell").value;
var p5mad = document.getElementById("w5shell").value;
var p5med = document.getElementById("d5shell").value;
var p5u = document.getElementById("u5shell").value;
var p5c = document.getElementById("q5shell").value;
var p5t = document.getElementById("t5shell").value;
var p6prod = document.getElementById("p6shell").value;
var p6mad = document.getElementById("w6shell").value;
var p6med = document.getElementById("d6shell").value;
var p6u = document.getElementById("u6shell").value;
var p6c = document.getElementById("q6shell").value;
var p6t = document.getElementById("t6shell").value;
var unotas = document.getElementById("unotas").value;

$.ajax({
    type: "POST",
    url: "/db",
    data: {
        folio: folio,
        client: client,
        d: d,
        flet: flet,
        isr: isr,
        p1prod: p1prod,
        p1mad: p1mad,
        p1med: p1med,
        p1u: p1u,
        p1c: p1c,
        p1t: p1t,
        p2prod: p2prod,
        p2mad: p2mad,
        p2med: p2med,
        p2u: p2u,
        p2c: p2c,
        p2t: p2t,
        p3prod: p3prod,
        p3mad: p3mad,
        p3med: p3med,
        p3u: p3u,
        p3c: p3c,
        p3t: p3t,
        p4prod: p4prod,
        p4mad: p4mad,
        p4med: p4med,
        p4u: p4u,
        p4c: p4c,
        p4t: p4t,
        p5prod: p5prod,
        p5mad: p5mad,
        p5med: p5med,
        p5u: p5u,
        p5c: p5c,
        p5t: p5t,
        p6prod: p6prod,
        p6mad: p6mad,
        p6med: p6med,
        p6u: p6u,
        p6c: p6c,
        p6t: p6t,
        unotas: unotas
    },
    success: function(data) {
        // Do something here with the received data
    }
});

folio = request.form['folio']
client = request.form['client']
d = request.form['d']
flet = request.form['flet'] == 'true'
isr = request.form['isr'] == 'true'
p1prod = request.form['p1prod']
p1mad = request.form['p1mad']
p1med = request.form['p1med']
p1u = request.form['p1u']
p1c = request.form['p1c']
p1t = request.form['p1t']
p2prod = request.form['p2prod']
p2mad = request.form['p2mad']
p2med = request.form['p2med']
p2u = request.form['p2u']
p2c = request.form['p2c']
p2t = request.form['p2t']
p3prod = request.form['p3prod']
p3mad = request.form['p3mad']
p3med = request.form['p3med']
p3u = request.form['p3u']
p3c = request.form['p3c']
p3t = request.form['p3t']
p4prod = request.form['p4prod']
p4mad = request.form['p4mad']
p4med = request.form['p4med']
p4u = request.form['p4u']
p4c = request.form['p4c']
p4t = request.form['p4t']
p5prod = request.form['p5prod']
p5mad = request.form['p5mad']
p5med = request.form['p5med']
p5u = request.form['p5u']
p5c = request.form['p5c']
p5t = request.form['p5t']
p6prod = request.form['p6prod']
p6mad = request.form['p6mad']
p6med = request.form['p6med']
p6u = request.form['p6u']
p6c = request.form['p6c']
p6t = request.form['p6t']
unotas = request.form['unotas']
query = 'INSERT INTO users (folio, client, d, flet, isr, p1prod, p1mad, p1med, p1u, p1c, p1t, p2prod, p2mad, p2med, p2u, p2c, p2t, p3prod, p3mad, p3med, p3u, p3c, p3t, p4prod, p4mad, p4med, p4u, p4c, p4t, p5prod, p5mad, p5med, p5u, p5c, p5t, p6prod, p6mad, p6med, p6u, p6c, p6t, unotas) VALUES (%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s)
params = (folio, client, d, flet, isr, p1prod, p1mad, p1med, p1u, p1c, p1t, p2prod, p2mad, p2med, p2u, p2c, p2t, p3prod, p3mad, p3med, p3u, p3c, p3t, p4prod, p4mad, p4med, p4u, p4c, p4t, p5prod, p5mad, p5med, p5u, p5c, p5t, p6prod, p6mad, p6med, p6u, p6c, p6t, unotas)
results = execute_query(get_connection(), query, params)